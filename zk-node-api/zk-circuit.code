import "hashes/sha256/512bitPacked" as sha256packed

// Public inputs
// onh0 + onh1: Hash of the note (secret note)
// nn1h0 + nn1h1: Hash of the new note 1
// nn2h0 + nn1h1: Hash of the new note 2

// Private inputs
// ona + onb: secret key of the sender
// onc + ond: (256 bits) representing the value of the note to be spent

// nn1a + nn1b: public key of the receiver
// nn1c + nn1d: the value of the note to be sent

// nn2c + nn2d: leftover change

def main(field onh0, field onh1, private field ona, private field onb, private field onc, private field ond, field nn1h0, field nn1h1, private field nn1a, private field nn1b, private field nn1c, private field nn1d, field nn2h0, field nn2h1, private field nn2c, private field nn2d) -> (field):

    field pka = ona
    field pkb = onb

    // old note
    h0 = sha256packed([pka, pkb, onc, ond])
    h0[0] == onh0 // verify with public input (hash of the note)
    h0[1] == onh1

    // new note 1 that goes to pkreciever
    h0 = sha256packed([nn1a, nn1b, nn1c, nn1d])
    h0[0] == nn1h0
    h0[1] == nn1h1

    // new note (left over change) that goes back to sender (pk)
    h0 = sha256packed([pka, pkb, nn2c, nn2d])
    h0[0] == nn2h0
    h0[1] == nn2h1

    ond == nn1d + nn2d // assuming the values fit in 128 bit nums - hence onc, nn1c, nn2c are 0
    return 1
